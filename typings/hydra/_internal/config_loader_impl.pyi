"""
This type stub file was generated by pyright.
"""

from dataclasses import dataclass
from typing import List, Optional
from omegaconf import DictConfig
from hydra._internal.defaults_list import DefaultsList
from hydra.core.config_loader import ConfigLoader
from hydra.core.config_search_path import ConfigSearchPath
from hydra.core.object_type import ObjectType
from hydra.core.override_parser.types import Override
from hydra.plugins.config_source import ConfigSource
from hydra.types import RunMode

@dataclass
class SplitOverrides:
    config_group_overrides: List[Override]
    config_overrides: List[Override]
    ...


class ConfigLoaderImpl(ConfigLoader):
    """
    Configuration loader
    """
    def __init__(self, config_search_path: ConfigSearchPath) -> None:
        ...
    
    @staticmethod
    def validate_sweep_overrides_legal(overrides: List[Override], run_mode: RunMode, from_shell: bool) -> None:
        ...
    
    def ensure_main_config_source_available(self) -> None:
        ...
    
    def load_configuration(self, config_name: Optional[str], overrides: List[str], run_mode: RunMode, from_shell: bool = ...) -> DictConfig:
        ...
    
    def load_sweep_config(self, master_config: DictConfig, sweep_overrides: List[str]) -> DictConfig:
        ...
    
    def get_search_path(self) -> ConfigSearchPath:
        ...
    
    def list_groups(self, parent_name: str) -> List[str]:
        ...
    
    def get_group_options(self, group_name: str, results_filter: Optional[ObjectType] = ...) -> List[str]:
        ...
    
    def get_sources(self) -> List[ConfigSource]:
        ...
    
    def compute_defaults_list(self, config_name: Optional[str], overrides: List[str], run_mode: RunMode) -> DefaultsList:
        ...
    


def get_overrides_dirname(overrides: List[Override], exclude_keys: List[str], item_sep: str, kv_sep: str) -> str:
    ...

