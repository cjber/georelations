"""
This type stub file was generated by pyright.
"""

from abc import abstractmethod
from typing import List, Optional
from hydra.core.config_loader import ConfigLoader
from hydra.plugins.plugin import Plugin

class CompletionPlugin(Plugin):
    def __init__(self, config_loader: ConfigLoader) -> None:
        ...
    
    @abstractmethod
    def install(self) -> None:
        ...
    
    @abstractmethod
    def uninstall(self) -> None:
        ...
    
    @staticmethod
    @abstractmethod
    def provides() -> str:
        """
        :return: the name of the shell this plugin provides completion for
        """
        ...
    
    @abstractmethod
    def query(self, config_name: Optional[str]) -> None:
        ...
    
    @staticmethod
    @abstractmethod
    def help(command: str) -> str:
        """
        :param command: "install" or "uninstall"
        :return: command the user can run to install or uninstall this shell completion on the appropriate shell
        """
        ...
    
    @staticmethod
    def complete_files(word: str) -> List[str]:
        ...
    
    @staticmethod
    def strip_python_or_app_name(line: str) -> str:
        """
        Take the command line received from shell completion, and strip the app name from it
        which could be at the form of python script.py or some_app.
        it also corrects the key (COMP_INDEX) to reflect the same location in the striped command line.
        :param line: input line, may contain python file.py followed=by_args..
        :return: tuple(args line, key of cursor in args line)
        """
        ...
    


class DefaultCompletionPlugin(CompletionPlugin):
    """
    A concrete instance of CompletionPlugin that is used for testing.
    """
    def install(self) -> None:
        ...
    
    def uninstall(self) -> None:
        ...
    
    @staticmethod
    def provides() -> str:
        ...
    
    def query(self, config_name: Optional[str]) -> None:
        ...
    
    @staticmethod
    def help(command: str) -> str:
        ...
    


